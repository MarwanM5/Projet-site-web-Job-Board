{"ast":null,"code":"var _jsxFileName = \"/home/marwan/Projet Groupe Web Piscine/T-WEB-501-LYO_19/project-jobboard/src/Pages/Companies.js\",\n  _s = $RefreshSig$();\nimport { React, useState, useEffect } from 'react';\nimport CompaniesService from '../Services/CompaniesService';\nimport '../Styles/Card.css';\nimport '../Styles/App.css';\nimport '../Styles/Details.css';\nimport '../Styles/Form.css';\nimport Swal from 'sweetalert2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Companies() {\n  _s();\n  const [company, setCompany] = useState([]);\n  const [error, setError] = useState(null);\n  const [companyData, setCompanyData] = useState([]);\n  const [showDetails, setShowDetails] = useState(false);\n  const [showForm, setShowForm] = useState(false);\n  const [isUpdating, setIsUpdating] = useState(false);\n\n  // Auth context\n  const user = JSON.parse(localStorage.getItem('user'));\n\n  // Form data state\n  const [formData, setFormData] = useState({\n    id: 0,\n    name: '',\n    contact_email: '',\n    address: ''\n  });\n\n  // Form data error state\n  const [formDataError, setFormDataError] = useState({\n    nameBool: true,\n    contact_emailBool: true,\n    addressBool: true,\n    name: '',\n    contact_email: '',\n    address: ''\n  });\n\n  /**\n   * Retrieves data for companies based on the provided ID.\n   *\n   * @param {number} id - The ID of the company.\n   * @return {Promise<void>} - A promise that resolves once the data is retrieved.\n   */\n  const getDataCompanises = async id => {\n    try {\n      const response = await CompaniesService.getCompanyById(id);\n      setCompanyData(response.data);\n      setShowDetails(true);\n    } catch (err) {\n      setError(err);\n    }\n  };\n\n  /**\n   * Add a new company to the database.\n   *\n   * @return {Promise<void>} - A promise that resolves when the company is added successfully.\n   * @throws {Error} - If there is an error adding the company to the database.\n   */\n  const addCompany = async () => {\n    try {\n      if (isUpdating) {\n        const data = {\n          id: formData.id,\n          name: formData.name,\n          contact_email: formData.contact_email,\n          address: formData.address\n        };\n        const response = await CompaniesService.updateCompany(data);\n        setCompany([...company, response.data]);\n        setShowForm(false);\n        setIsUpdating(false);\n        setFormData({\n          name: '',\n          contact_email: '',\n          address: ''\n        });\n        setShowDetails(false);\n        fetchData();\n      } else {\n        const response = await CompaniesService.createCompany(formData);\n        setCompany([...company, response.data]);\n        setShowForm(false);\n        setFormData({\n          name: '',\n          contact_email: '',\n          address: ''\n        });\n        fetchData();\n      }\n    } catch (err) {\n      setError(err);\n    }\n  };\n\n  /**\n   * Handles the form submission asynchronously.\n   *\n   * @param {Event} e - The event object representing the form submission.\n   * @return {Promise<void>} A promise that resolves when the form submission is handled.\n   */\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (isUpdating) {\n      setFormDataError({\n        nameBool: false,\n        contact_emailBool: false,\n        addressBool: false,\n        name: '',\n        contact_email: '',\n        address: ''\n      });\n    }\n    if (formDataError.nameBool || formDataError.contact_emailBool || formDataError.addressBool) {\n      console.error(\"Please fill in all the fields correctly!\");\n      return;\n    }\n    await addCompany();\n  };\n\n  /**\n   * Handles the input change event.\n   *\n   * @param {Object} event - The input change event.\n   */\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n    if (value.trim() === \"\") {\n      setFormDataError(prevError => ({\n        ...prevError,\n        [`${name}Bool`]: true,\n        [name]: `${name} cannot be empty!`\n      }));\n    } else {\n      setFormDataError(prevError => ({\n        ...prevError,\n        [`${name}Bool`]: false,\n        [name]: ''\n      }));\n    }\n  };\n\n  /**\n   * Updates the form data and shows the update form.\n   *\n   * @param {Object} data - The data object containing the updated values.\n   */\n  const showUpdateForm = data => {\n    setShowForm(true);\n    setIsUpdating(true);\n    setFormData({\n      id: data.id,\n      name: data.name,\n      contact_email: data.contact_email,\n      address: data.address\n    });\n    setFormDataError({\n      nameBool: false,\n      contact_emailBool: false,\n      addressBool: false,\n      name: '',\n      contact_email: '',\n      address: ''\n    });\n  };\n\n  /**\n   * Deletes a company from the database.\n   *\n   * @param {Object} data - The data required to delete the company.\n   * @return {Promise} A promise that resolves when the company is deleted successfully.\n   */\n  const deleteCompany = async data => {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then(async result => {\n      if (result.isConfirmed) {\n        try {\n          const response = await CompaniesService.deleteCompany(data.id);\n          setShowDetails(false);\n          setCompany(company.filter(c => c.id !== response.data.id));\n          fetchData();\n        } catch (err) {\n          setError(err);\n          Swal.fire({\n            icon: 'error',\n            title: 'Oops...',\n            text: 'Something went wrong!'\n          });\n        }\n      }\n    });\n  };\n\n  /**\n   * Fetches data from the CompaniesService and updates the state with the response.\n   *\n   * @param {type} paramName - description of parameter\n   * @return {type} description of return value\n   */\n  const fetchData = async () => {\n    try {\n      const response = await CompaniesService.getCompanies();\n      setCompany(response.data);\n    } catch (err) {\n      setError(err);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  // if there is an error fetching the data, show an error message\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: [\"Error : \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"\",\n      children: \"Companies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-create\",\n      onClick: () => setShowForm(true),\n      children: \"Add Company\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards-container\",\n      children: company && company.length > 0 ? company.map(c => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-title\",\n          children: c.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-content\",\n          children: c.contact_email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-footer\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: () => getDataCompanises(c.id),\n            children: \"Learn More\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 52\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 25\n        }, this)]\n      }, c.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 21\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: \"NO DATA IN DATABASE FOR COMPANIES\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 13\n    }, this), showDetails && companyData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"details\",\n        id: \"modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [companyData.name, \" Details\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Address: \", companyData.address]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Email: \", companyData.contact_email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-close\",\n            onClick: () => {\n              document.getElementById('modal').classList.add('details-close');\n              document.getElementById('modal').addEventListener('animationend', () => {\n                setShowDetails(false);\n              });\n            },\n            children: \"Close Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 29\n          }, this), (user.role === 'admin' || user.role === 'manager' && user.id === companyData.id) && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              onClick: () => showUpdateForm(companyData),\n              children: \"Edit Company\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-delete\",\n              onClick: () => deleteCompany(companyData),\n              children: \"Delete Company\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 116\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 17\n    }, this), showForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"hidden\",\n          name: \"id\",\n          id: \"id\",\n          value: formData.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          id: \"name\",\n          value: formData.name,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error-message\",\n          children: formDataError.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"address\",\n          children: \"Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          className: \"textarea\",\n          name: \"address\",\n          id: \"address\",\n          value: formData.address,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error-message\",\n          children: formDataError.address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"contact_email\",\n          children: \"Contact Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"contact_email\",\n          id: \"contact_email\",\n          value: formData.contact_email,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error-message\",\n          children: formDataError.contact_email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          type: \"submit\",\n          children: isUpdating ? 'Update Company' : 'Create Company'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: () => setShowForm(false),\n          children: \"Close Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 9\n  }, this);\n}\n_s(Companies, \"Rvl7vTpdmcaq649PtuPMPUWps2I=\");\n_c = Companies;\nexport default Companies;\nvar _c;\n$RefreshReg$(_c, \"Companies\");","map":{"version":3,"names":["React","useState","useEffect","CompaniesService","Swal","jsxDEV","_jsxDEV","Companies","_s","company","setCompany","error","setError","companyData","setCompanyData","showDetails","setShowDetails","showForm","setShowForm","isUpdating","setIsUpdating","user","JSON","parse","localStorage","getItem","formData","setFormData","id","name","contact_email","address","formDataError","setFormDataError","nameBool","contact_emailBool","addressBool","getDataCompanises","response","getCompanyById","data","err","addCompany","updateCompany","fetchData","createCompany","handleSubmit","e","preventDefault","console","handleInputChange","event","value","target","prevState","trim","prevError","showUpdateForm","deleteCompany","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","filter","c","getCompanies","className","children","message","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","map","document","getElementById","classList","add","addEventListener","role","onSubmit","type","htmlFor","onChange","_c","$RefreshReg$"],"sources":["/home/marwan/Projet Groupe Web Piscine/T-WEB-501-LYO_19/project-jobboard/src/Pages/Companies.js"],"sourcesContent":["import { React, useState, useEffect } from 'react';\nimport CompaniesService from '../Services/CompaniesService';\nimport '../Styles/Card.css';\nimport '../Styles/App.css';\nimport '../Styles/Details.css';\nimport '../Styles/Form.css';\nimport Swal from 'sweetalert2';\nfunction Companies () {\n    const [company, setCompany] = useState([]);\n    const [error, setError] = useState(null);\n    const [companyData, setCompanyData] = useState([]);\n    const [showDetails, setShowDetails] = useState(false);\n    const [showForm, setShowForm] = useState(false);\n    const [isUpdating, setIsUpdating] = useState(false);\n\n    // Auth context\n    const user = JSON.parse(localStorage.getItem('user'));\n\n    // Form data state\n    const [formData, setFormData] = useState({\n        id: 0,\n        name: '',\n        contact_email: '',\n        address: ''\n    });\n\n    // Form data error state\n    const [formDataError, setFormDataError] = useState({\n        nameBool: true,\n        contact_emailBool: true,\n        addressBool: true,\n        name: '',\n        contact_email: '',\n        address: ''\n    });\n\n    /**\n     * Retrieves data for companies based on the provided ID.\n     *\n     * @param {number} id - The ID of the company.\n     * @return {Promise<void>} - A promise that resolves once the data is retrieved.\n     */\n    const getDataCompanises = async (id) => {\n        try {\n            const response = await CompaniesService.getCompanyById(id);\n            setCompanyData(response.data);\n            setShowDetails(true);\n        } catch (err) {\n            setError(err);\n        }\n    }\n\n    /**\n     * Add a new company to the database.\n     *\n     * @return {Promise<void>} - A promise that resolves when the company is added successfully.\n     * @throws {Error} - If there is an error adding the company to the database.\n     */\n    const addCompany = async () => {\n        try {\n            if (isUpdating) {\n                const data = {\n                    id: formData.id,\n                    name: formData.name,\n                    contact_email: formData.contact_email,\n                    address: formData.address\n                }\n                const response = await CompaniesService.updateCompany(data);\n                setCompany([...company, response.data]);\n                setShowForm(false);\n                setIsUpdating(false);\n                setFormData({\n                    name: '',\n                    contact_email: '',\n                    address: ''\n                })\n                setShowDetails(false);\n                fetchData();\n            }\n            else {\n                const response = await CompaniesService.createCompany(formData);\n                setCompany([...company, response.data]);\n                setShowForm(false);\n                setFormData({\n                    name: '',\n                    contact_email: '',\n                    address: ''\n                })\n                fetchData();\n            }\n        } catch (err) {\n            setError(err);\n        }\n    };\n\n\n    /**\n     * Handles the form submission asynchronously.\n     *\n     * @param {Event} e - The event object representing the form submission.\n     * @return {Promise<void>} A promise that resolves when the form submission is handled.\n     */\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        if (isUpdating) {\n            setFormDataError({\n                nameBool: false,\n                contact_emailBool: false,\n                addressBool: false,\n                name: '',\n                contact_email: '',\n                address: ''\n            })\n        }\n\n        if (formDataError.nameBool || formDataError.contact_emailBool || formDataError.addressBool) {\n            console.error(\"Please fill in all the fields correctly!\");\n            return;\n        }\n\n        await addCompany();\n    };\n\n    /**\n     * Handles the input change event.\n     *\n     * @param {Object} event - The input change event.\n     */\n    const handleInputChange = (event) => {\n        const { name, value } = event.target;\n        setFormData(prevState => ({ ...prevState, [name]: value }));\n\n        if (value.trim() === \"\") {\n            setFormDataError(prevError => ({\n                ...prevError,\n                [`${name}Bool`]: true,\n                [name]: `${name} cannot be empty!`\n            }));\n        } else {\n            setFormDataError(prevError => ({\n                ...prevError,\n                [`${name}Bool`]: false,\n                [name]: ''\n            }));\n        }\n    };\n\n    /**\n     * Updates the form data and shows the update form.\n     *\n     * @param {Object} data - The data object containing the updated values.\n     */\n    const showUpdateForm = (data) => {\n        setShowForm(true);\n        setIsUpdating(true);\n        setFormData({\n            id: data.id,\n            name: data.name,\n            contact_email: data.contact_email,\n            address: data.address\n        });\n        setFormDataError({\n            nameBool: false,\n            contact_emailBool: false,\n            addressBool: false,\n            name: '',\n            contact_email: '',\n            address: ''\n        })\n    }\n\n    /**\n     * Deletes a company from the database.\n     *\n     * @param {Object} data - The data required to delete the company.\n     * @return {Promise} A promise that resolves when the company is deleted successfully.\n     */\n    const deleteCompany = async (data) => {\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to revert this!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, delete it!'\n        }).then(async (result) => {\n            if (result.isConfirmed) {\n                try {\n                    const response = await CompaniesService.deleteCompany(data.id);\n                    setShowDetails(false);\n                    setCompany(company.filter((c) => c.id !== response.data.id));\n                    fetchData();\n                } catch (err) {\n                    setError(err);\n                    Swal.fire({\n                        icon: 'error',\n                        title: 'Oops...',\n                        text: 'Something went wrong!',\n                    });\n                }\n            }\n        });\n    }\n\n    /**\n     * Fetches data from the CompaniesService and updates the state with the response.\n     *\n     * @param {type} paramName - description of parameter\n     * @return {type} description of return value\n     */\n    const fetchData = async () => {\n        try {\n            const response = await CompaniesService.getCompanies();\n            setCompany(response.data);\n        } catch (err) {\n            setError(err);\n        }\n    };\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    // if there is an error fetching the data, show an error message\n    if (error) {\n        return <div className='error'>Error : {error.message}</div>;\n    }\n\n    return (\n        <div>\n            <h3 className=''>Companies</h3>\n            <button className='btn btn-create' onClick={() => setShowForm(true)}>Add Company</button>\n            <div className='cards-container'>\n                {company && company.length > 0 ? company.map((c) => (\n                    <div className='card' key={c.id}>\n                        <p className='card-title'>{c.name}</p>\n                        <p className='card-content'>{c.contact_email}</p>\n                        <p className='card-footer'><button className='btn' onClick={() => getDataCompanises(c.id)}>Learn More</button></p>\n                    </div>\n                )) : <div className='error'>NO DATA IN DATABASE FOR COMPANIES</div>}\n            </div>\n\n            <br />\n            {showDetails && companyData && (\n                <div className='container'>\n                    <div className='details' id='modal'>\n                        <h3>{companyData.name} Details</h3>\n                        <p>Address: {companyData.address}</p>\n                        <p>Email: {companyData.contact_email}</p>\n                        <div className='btn-container'>\n                            <button className='btn btn-close' onClick={() => {\n                                document.getElementById('modal').classList.add('details-close');\n                                document.getElementById('modal').addEventListener('animationend', () => {\n                                    setShowDetails(false);\n                                });\n                            }}>Close Details</button>\n                            {(user.role === 'admin' || (user.role === 'manager' && user.id === companyData.id)) && <div>\n                                <button className='btn' onClick={() => showUpdateForm(companyData)}>Edit Company</button>\n                                <button className='btn btn-delete' onClick={() => deleteCompany(companyData)}>Delete Company</button>\n                            </div>\n                            }\n                        </div>\n                    </div>\n                </div>\n            )}\n            {showForm && (\n                <div className='container-form'>\n                    <form className='form' onSubmit={handleSubmit}>\n                        <input type='hidden' name='id' id='id' value={formData.id} />\n                        <label htmlFor='name'>Name</label>\n                        <input type='text' name='name' id='name' value={formData.name} onChange={handleInputChange} />\n                        <span className=\"error-message\">{formDataError.name}</span>\n\n                        <label htmlFor='address'>Address</label>\n                        <textarea type='text' className='textarea' name='address' id='address' value={formData.address} onChange={handleInputChange} />\n                        <span className=\"error-message\">{formDataError.address}</span>\n\n                        <label htmlFor='contact_email'>Contact Email</label>\n                        <input type='text' name='contact_email' id='contact_email' value={formData.contact_email} onChange={handleInputChange} />\n                        <span className=\"error-message\">{formDataError.contact_email}</span>\n\n                        <button className='btn' type=\"submit\">{isUpdating ? 'Update Company' : 'Create Company'}</button>\n                        <br />\n                        <button className='btn' onClick={() => setShowForm(false)}>Close Form</button>\n                    </form>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default Companies;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}