{"ast":null,"code":"var _jsxFileName = \"/home/marwan/Projet Groupe Web Piscine/T-WEB-501-LYO_19/project-jobboard/src/Pages/Account.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Account() {\n  _s();\n  const navigation = useNavigate();\n  const [isExisting, setIsExisting] = useState(false);\n  const [person, setPerson] = useState([]);\n  const [onePerson, setOnePerson] = useState([]);\n  const [companies, setCompanies] = useState([]);\n  const [verifyEmailClicked, setVerifyEmailClicked] = useState(false);\n  const [error, setError] = useState(null);\n  const token = localStorage.getItem(\"userToken\");\n  const {\n    setRole\n  } = useRole();\n  const inputMail = useRef();\n  const {\n    loginC,\n    logoutC\n  } = useAuth();\n  const [formData, setFormData] = useState({\n    id: 0,\n    name: '',\n    email: '',\n    password: '',\n    company_id: 0,\n    role: ''\n  });\n  const [formDataError, setFormDataError] = useState({\n    nameBool: true,\n    name: '',\n    emailBool: true,\n    email: '',\n    passwordBool: true,\n    password: '',\n    company_idBool: true,\n    company_id: '',\n    roleBool: true,\n    role: ''\n  });\n  const getAllPersons = async () => {\n    try {\n      const response = await PeopleService.getPeople();\n      setPerson(response.data);\n    } catch (err) {\n      setError(err);\n    }\n  };\n  const getPersonByEmail = async () => {\n    try {\n      const decodedToken = jwtDecode(token);\n      const email = decodedToken.sub;\n      const response = await PeopleService.getPersonByEmail(email);\n      setOnePerson(response.data);\n      setRole(response.data.role);\n    } catch (err) {\n      setError(err);\n    }\n  };\n  const fetchCompanies = async () => {\n    try {\n      const response = await CompaniesService.getCompanies();\n      setCompanies(response.data);\n    } catch (err) {\n      setError(err);\n    }\n  };\n  const login = async () => {\n    try {\n      const response = await PeopleService.login(formData.email, formData.password);\n      const token = response.data.token;\n      localStorage.setItem('userToken', token);\n      navigation('/');\n      loginC();\n    } catch (error) {\n      setError(error);\n    }\n  };\n  const createAccount = async () => {\n    try {\n      if (!isExisting) {\n        if (!formDataError.nameBool || !formDataError.emailBool || !formDataError.passwordBool || !formDataError.roleBool || !formDataError.company_idBool) {\n          const data = {\n            id: 0,\n            name: formData.name,\n            email: formData.email,\n            password: formData.password,\n            role: formData.role,\n            company: {\n              id: formData.company_id\n            }\n          };\n          const response = await PeopleService.createPerson(data);\n          setPerson([...person, response.data]);\n          setIsExisting(true);\n          login();\n          setFormData({\n            id: 0,\n            name: '',\n            email: '',\n            password: '',\n            company_id: 0\n          });\n        }\n      } else {\n        login();\n      }\n    } catch (err) {\n      setError(err);\n    }\n  };\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n    if (value.trim() === \"\" || value === \"0\") {\n      setFormDataError(prevError => ({\n        ...prevError,\n        [`${name}Bool`]: true,\n        [name]: `${name} cannot be empty`\n      }));\n    } else {\n      setFormDataError(prevError => ({\n        ...prevError,\n        [`${name}Bool`]: false,\n        [name]: ''\n      }));\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    await createAccount();\n  };\n  const verifyEmail = async e => {\n    e.target.disabled = true;\n    e.target.style.display = 'none';\n    setVerifyEmailClicked(true);\n    inputMail.current.disabled = true;\n    if (person.find(p => p.email === formData.email)) {\n      setIsExisting(true);\n    } else {\n      setIsExisting(false);\n    }\n  };\n  useEffect(() => {\n    getAllPersons();\n    fetchCompanies();\n    getPersonByEmail();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: !token ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-account\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: inputMail,\n            type: \"email\",\n            name: \"email\",\n            value: formData.email,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: verifyEmail,\n            children: \"Login/Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, this), verifyEmailClicked && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: !isExisting ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"name\",\n                children: \"Name: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"name\",\n                value: formData.name,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error-account\",\n                children: formDataError.nameBool ? formDataError.name : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"password\",\n                children: \"Password: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                name: \"password\",\n                value: formData.password,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error-account\",\n                children: formDataError.passwordBool ? formDataError.password : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"company_id\",\n                children: \"Company: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"company_id\",\n                id: \"company_id\",\n                value: formData.company_id,\n                onChange: handleInputChange,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"0\",\n                  children: \"Select Company\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 45\n                }, this), companies && companies.map(c => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: c.id,\n                  children: c.name\n                }, c.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 49\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error-account\",\n                children: formDataError.company_idBool ? formDataError.company_id : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"role\",\n                children: \"Role: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"role\",\n                id: \"role\",\n                value: formData.role,\n                onChange: handleInputChange,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"0\",\n                  children: \"Select Role\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"admin\",\n                  children: \"Admin\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"manager\",\n                  children: \"Manager\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"employee\",\n                  children: \"Employee\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error-account\",\n                children: formDataError.roleBool ? formDataError.role : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn\",\n                type: \"submit\",\n                children: \"Create\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"password\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                name: \"password\",\n                value: formData.password,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error-account\",\n                children: error.message === 'Request failed with status code 401' ? 'Wrong password' : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn\",\n                type: \"submit\",\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"account-container\",\n          children: onePerson && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"card-title\",\n              children: \"Data for User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Name: \", onePerson.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Email: \", onePerson.email]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Role: \", onePerson.role]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 9\n  }, this);\n}\n_s(Account, \"riqYBydP7w0/hDbAct9CoIBAgfk=\", true);\n_c = Account;\nexport default Account;\nvar _c;\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Account","_s","navigation","useNavigate","isExisting","setIsExisting","useState","person","setPerson","onePerson","setOnePerson","companies","setCompanies","verifyEmailClicked","setVerifyEmailClicked","error","setError","token","localStorage","getItem","setRole","useRole","inputMail","useRef","loginC","logoutC","useAuth","formData","setFormData","id","name","email","password","company_id","role","formDataError","setFormDataError","nameBool","emailBool","passwordBool","company_idBool","roleBool","getAllPersons","response","PeopleService","getPeople","data","err","getPersonByEmail","decodedToken","jwtDecode","sub","fetchCompanies","CompaniesService","getCompanies","login","setItem","createAccount","company","createPerson","handleInputChange","event","value","target","prevState","trim","prevError","handleSubmit","e","preventDefault","verifyEmail","disabled","style","display","current","find","p","useEffect","children","className","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","ref","type","onChange","onClick","map","c","message","_c","$RefreshReg$"],"sources":["/home/marwan/Projet Groupe Web Piscine/T-WEB-501-LYO_19/project-jobboard/src/Pages/Account.js"],"sourcesContent":["import React from 'react';\nfunction Account () {\n    const navigation = useNavigate();\n    const [isExisting, setIsExisting] = useState(false);\n    const [person, setPerson] = useState([]);\n    const [onePerson, setOnePerson] = useState([]);\n    const [companies, setCompanies] = useState([]);\n    const [verifyEmailClicked, setVerifyEmailClicked] = useState(false);\n    const [error, setError] = useState(null);\n    const token = localStorage.getItem(\"userToken\");\n    const { setRole } = useRole();\n    const inputMail = useRef();\n    \n    const {loginC, logoutC} = useAuth();\n\n    const [formData, setFormData] = useState({\n        id: 0,\n        name: '',\n        email: '',\n        password: '',\n        company_id: 0,\n        role: ''\n    })\n\n    const [formDataError, setFormDataError] = useState({\n        nameBool: true,\n        name: '',\n        emailBool: true,\n        email: '',\n        passwordBool: true,\n        password: '',\n        company_idBool: true,\n        company_id: '',\n        roleBool: true,\n        role: ''\n    })\n\n    const getAllPersons = async () => {\n        try {\n            const response = await PeopleService.getPeople();\n            setPerson(response.data);\n        } catch (err) {\n            setError(err);\n        }\n    }\n\n    const getPersonByEmail = async () => {\n        try {\n            const decodedToken = jwtDecode(token);\n            const email = decodedToken.sub;\n            const response = await PeopleService.getPersonByEmail(email);\n            setOnePerson(response.data);\n            setRole(response.data.role);\n        } catch (err) {\n            setError(err);\n        }\n    }\n\n    const fetchCompanies = async () => {\n        try {\n            const response = await CompaniesService.getCompanies();\n            setCompanies(response.data);\n        } catch (err) {\n            setError(err);\n        }\n    }\n\n    const login = async () => {\n        try {\n            const response = await PeopleService.login(formData.email, formData.password);\n            const token = response.data.token;\n            localStorage.setItem('userToken', token);\n            navigation('/');\n            loginC();\n            \n        } catch (error) {\n            setError(error);\n        }\n    }\n\n\n\n    const createAccount = async () => {\n        try {\n            if (!isExisting) {\n                if (!formDataError.nameBool || !formDataError.emailBool || !formDataError.passwordBool || !formDataError.roleBool || !formDataError.company_idBool) {\n                    const data = {\n                        id: 0,\n                        name: formData.name,\n                        email: formData.email,\n                        password: formData.password,\n                        role: formData.role,\n                        company: {\n                            id: formData.company_id\n                        }\n                    }\n                    const response = await PeopleService.createPerson(data);\n                    setPerson([...person, response.data]);\n                    setIsExisting(true);\n                    login();\n                    setFormData({\n                        id: 0,\n                        name: '',\n                        email: '',\n                        password: '',\n                        company_id: 0\n                    })\n                }\n            }\n            else {\n                login();\n            }\n        } catch (err) {\n            setError(err);\n        }\n    }\n\n    const handleInputChange = (event) => {\n        const { name, value } = event.target;\n        setFormData(prevState => ({ ...prevState, [name]: value }));\n        if (value.trim() === \"\" || value === \"0\") {\n            setFormDataError(prevError => ({\n                ...prevError,\n                [`${name}Bool`]: true,\n                [name]: `${name} cannot be empty`\n            }));\n        } else {\n            setFormDataError(prevError => ({\n                ...prevError,\n                [`${name}Bool`]: false,\n                [name]: ''\n            }));\n        }\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        await createAccount();\n    }\n\n    const verifyEmail = async (e) => {\n        e.target.disabled = true;\n        e.target.style.display = 'none';\n        setVerifyEmailClicked(true);\n        inputMail.current.disabled = true;\n        if (person.find((p) => p.email === formData.email)) {\n            setIsExisting(true);\n        }\n        else {\n            setIsExisting(false);\n        }\n    }\n\n    useEffect(() => {\n        getAllPersons();\n        fetchCompanies();\n        getPersonByEmail();\n    }, [])\n\n    return (\n\n        <div>\n            <div>\n                {!token ? (\n                    <div className='form-account'>\n                    <form className='form' onSubmit={handleSubmit}>\n                        <label htmlFor='email'>Email</label>\n                        <input ref={inputMail} type='email' name='email' value={formData.email} onChange={handleInputChange} />\n                        <button className='btn' onClick={verifyEmail}>Login/Register</button>\n                        {verifyEmailClicked && (\n                            <div>\n                                {!isExisting ? (\n                                    <div>\n                                        <label htmlFor='name'>Name: </label>\n                                            <input type='text' name='name' value={formData.name} onChange={handleInputChange} />\n                                            <br/>\n                                            <span className='error-account'>{formDataError.nameBool ? formDataError.name : ''}</span>\n                                            <br/>\n                                        <label htmlFor='password'>Password: </label>\n                                            <input type='password' name='password' value={formData.password} onChange={handleInputChange} />\n                                            <br/>\n                                            <span className='error-account'>{formDataError.passwordBool ? formDataError.password : ''}</span>\n                                            <br/>\n                                        <label htmlFor='company_id'>Company: </label>\n                                        <select\n                                            name='company_id'\n                                            id='company_id'\n                                            value={formData.company_id}\n                                            onChange={handleInputChange}>\n                                            <option value=\"0\">Select Company</option>\n                                            {companies && companies.map((c) => (\n                                                <option key={c.id} value={c.id}>{c.name}</option>\n                                            ))}\n                                            </select>\n                                            <br/>\n                                            <span className='error-account'>{formDataError.company_idBool ? formDataError.company_id : ''}</span>\n                                            <br/>\n                                        <label htmlFor='role'>Role: </label>\n                                        <select name='role' id='role'\n                                            value={formData.role} onChange={handleInputChange}>\n                                                <option value=\"0\">Select Role</option>\n                                                <option value=\"admin\">Admin</option>\n                                                <option value=\"manager\">Manager</option>\n                                                <option value=\"employee\">Employee</option>\n                                            </select>\n                                            <br/>\n                                            <span className='error-account'>{formDataError.roleBool ? formDataError.role : ''}</span>\n                                            <br/>\n                                        <button className='btn' type='submit'>Create</button>\n                                    </div>\n                                ) : <div>\n                                    <label htmlFor='password'>Password</label>\n                                            <input type='password' name='password' value={formData.password} onChange={handleInputChange} />\n                                            <br/>\n                                            <span className='error-account'>{error.message === 'Request failed with status code 401' ? 'Wrong password' : ''}</span>\n                                    <button className='btn' type='submit'>Login</button>\n                                </div>}\n                            </div>\n                        )}\n                        </form>\n                    </div>\n                ) : (\n                        <div>\n                            <div className='account-container'>\n                                {onePerson && (\n                                <div className='card'>\n                                    <h2 className='card-title'>Data for User</h2>\n                                    <div className='card-content'>\n                                        <p>Name: {onePerson.name}</p>\n                                        <p>Email: {onePerson.email}</p>\n                                        <p>Role: {onePerson.role}</p>\n                                    </div>\n                                    </div>\n                                )}\n                            </div>\n                    </div>\n                )}\n\n            </div>\n        </div>\n        \n    );\n}\n\nexport default Account;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}