{"ast":null,"code":"import axios from 'axios';\naxios.defaults.baseURL = 'http://localhost:8080';\naxios.interceptors.request.use(config => {\n  const token = localStorage.getItem('userToken');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nfunction getPeople() {\n  return axios.get('/api/people');\n}\nfunction getPersonByEmail(email) {\n  return axios.get(`/api/people/email/${email}`);\n}\nfunction login(email, password) {\n  return axios.post('/api/login', {\n    email,\n    password\n  });\n}\nfunction getPerson(id) {\n  return axios.get(`/api/people/${id}`);\n}\nfunction createPerson(person) {\n  return axios.post('/api/people', person);\n}\nfunction updatePerson(person) {\n  return axios.put(`/api/people/`, person);\n}\nfunction deletePerson(id) {\n  return axios.delete(`/api/people/${id}`);\n}\nconst PeopleService = {\n  getPeople,\n  getPerson,\n  createPerson,\n  updatePerson,\n  getPersonByEmail,\n  deletePerson,\n  login\n};\nexport default PeopleService;","map":{"version":3,"names":["axios","defaults","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject","getPeople","get","getPersonByEmail","email","login","password","post","getPerson","id","createPerson","person","updatePerson","put","deletePerson","delete","PeopleService"],"sources":["/home/marwan/Projet Groupe Web Piscine/T-WEB-501-LYO_19/project-jobboard/src/Services/PeopleService.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'http://localhost:8080';\n\naxios.interceptors.request.use(\n    (config) => {\n      const token = localStorage.getItem('userToken');\n      if (token) {\n        config.headers['Authorization'] = `Bearer ${token}`;\n      }\n      return config;\n    },\n    (error) => {\n      return Promise.reject(error);\n    }\n  );\n\nfunction getPeople() {\n    return axios.get('/api/people');\n}\n\nfunction getPersonByEmail(email) {\n    return axios.get(`/api/people/email/${email}`);\n}\n\nfunction login (email, password) {\n    return axios.post('/api/login', {email, password});\n}\n\nfunction getPerson(id) {\n    return axios.get(`/api/people/${id}`);\n}\n\nfunction createPerson(person) {\n    return axios.post('/api/people', person);\n}\n\nfunction updatePerson(person) {\n    return axios.put(`/api/people/`, person);\n}\n\nfunction deletePerson(id) {\n    return axios.delete(`/api/people/${id}`);\n}\n\nconst PeopleService = {\n  getPeople,\n  getPerson,\n  createPerson,\n  updatePerson,\n  getPersonByEmail,\n  deletePerson,\n  login\n}\n\nexport default PeopleService;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzBA,KAAK,CAACC,QAAQ,CAACC,OAAO,GAAG,uBAAuB;AAEhDF,KAAK,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EAC/C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAAC,eAAe,CAAC,GAAI,UAASH,KAAM,EAAC;EACrD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAEH,SAASG,SAASA,CAAA,EAAG;EACjB,OAAOd,KAAK,CAACe,GAAG,CAAC,aAAa,CAAC;AACnC;AAEA,SAASC,gBAAgBA,CAACC,KAAK,EAAE;EAC7B,OAAOjB,KAAK,CAACe,GAAG,CAAE,qBAAoBE,KAAM,EAAC,CAAC;AAClD;AAEA,SAASC,KAAKA,CAAED,KAAK,EAAEE,QAAQ,EAAE;EAC7B,OAAOnB,KAAK,CAACoB,IAAI,CAAC,YAAY,EAAE;IAACH,KAAK;IAAEE;EAAQ,CAAC,CAAC;AACtD;AAEA,SAASE,SAASA,CAACC,EAAE,EAAE;EACnB,OAAOtB,KAAK,CAACe,GAAG,CAAE,eAAcO,EAAG,EAAC,CAAC;AACzC;AAEA,SAASC,YAAYA,CAACC,MAAM,EAAE;EAC1B,OAAOxB,KAAK,CAACoB,IAAI,CAAC,aAAa,EAAEI,MAAM,CAAC;AAC5C;AAEA,SAASC,YAAYA,CAACD,MAAM,EAAE;EAC1B,OAAOxB,KAAK,CAAC0B,GAAG,CAAE,cAAa,EAAEF,MAAM,CAAC;AAC5C;AAEA,SAASG,YAAYA,CAACL,EAAE,EAAE;EACtB,OAAOtB,KAAK,CAAC4B,MAAM,CAAE,eAAcN,EAAG,EAAC,CAAC;AAC5C;AAEA,MAAMO,aAAa,GAAG;EACpBf,SAAS;EACTO,SAAS;EACTE,YAAY;EACZE,YAAY;EACZT,gBAAgB;EAChBW,YAAY;EACZT;AACF,CAAC;AAED,eAAeW,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}