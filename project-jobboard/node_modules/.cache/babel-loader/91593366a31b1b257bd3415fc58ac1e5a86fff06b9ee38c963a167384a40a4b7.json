{"ast":null,"code":"var _jsxFileName = \"/home/marwan/Projet Groupe Web Piscine/T-WEB-501-LYO_19/project-jobboard/src/Pages/Account.js\",\n  _s = $RefreshSig$();\nimport { React, useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport PeopleService from '../Services/PeopleService';\nimport CompaniesService from '../Services/CompaniesService';\nimport jwtDecode from 'jwt-decode';\nimport { useRole } from '../Components/RoleContext';\nimport { useAuth } from '../Components/AuthContext';\nimport alert from 'sweetalert2';\nimport '../Styles/Form.css';\nimport '../Styles/Account.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Account() {\n  _s();\n  const navigation = useNavigate();\n  const [isExisting, setIsExisting] = useState(false);\n  const [person, setPerson] = useState([]);\n  const [onePerson, setOnePerson] = useState([]);\n  const [companies, setCompanies] = useState([]);\n  const [verifyEmailClicked, setVerifyEmailClicked] = useState(false);\n  const [error, setError] = useState(null);\n  const token = localStorage.getItem(\"userToken\");\n  const {\n    setRole\n  } = useRole();\n  const inputMail = useRef();\n  const {\n    loginC,\n    logoutC\n  } = useAuth();\n  const [formData, setFormData] = useState({\n    id: 0,\n    name: '',\n    email: '',\n    password: '',\n    company_id: 0,\n    role: ''\n  });\n  const [formDataError, setFormDataError] = useState({\n    nameBool: true,\n    name: '',\n    emailBool: true,\n    email: '',\n    passwordBool: true,\n    password: '',\n    company_idBool: true,\n    company_id: '',\n    roleBool: true,\n    role: ''\n  });\n  const getAllPersons = async () => {\n    try {\n      const response = await PeopleService.getPeople();\n      setPerson(response.data);\n    } catch (err) {\n      setError(err);\n    }\n  };\n  const getPersonByEmail = async () => {\n    try {\n      const decodedToken = jwtDecode(token);\n      const email = decodedToken.sub;\n      const response = await PeopleService.getPersonByEmail(email);\n      setOnePerson(response.data);\n      setRole(response.data.role);\n    } catch (err) {\n      setError(err);\n    }\n  };\n  const fetchCompanies = async () => {\n    try {\n      const response = await CompaniesService.getCompanies();\n      setCompanies(response.data);\n    } catch (err) {\n      setError(err);\n    }\n  };\n  const login = async () => {\n    try {\n      const response = await PeopleService.login(formData.email, formData.password);\n      const token = response.data.token;\n      localStorage.setItem('userToken', token);\n      navigation('/');\n      loginC();\n    } catch (error) {\n      setError(error);\n    }\n  };\n  const createAccount = async () => {\n    try {\n      if (!isExisting) {\n        if (!formDataError.nameBool || !formDataError.emailBool || !formDataError.passwordBool || !formDataError.roleBool || !formDataError.company_idBool) {\n          const data = {\n            id: 0,\n            name: formData.name,\n            email: formData.email,\n            password: formData.password,\n            role: formData.role,\n            company: {\n              id: formData.company_id\n            }\n          };\n          const response = await PeopleService.createPerson(data);\n          setPerson([...person, response.data]);\n          setIsExisting(true);\n          login();\n          setFormData({\n            id: 0,\n            name: '',\n            email: '',\n            password: '',\n            company_id: 0\n          });\n        }\n      } else {\n        login();\n      }\n    } catch (err) {\n      setError(err);\n    }\n  };\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n    if (value.trim() === \"\" || value === \"0\") {\n      setFormDataError(prevError => ({\n        ...prevError,\n        [`${name}Bool`]: true,\n        [name]: `${name} cannot be empty`\n      }));\n    } else {\n      setFormDataError(prevError => ({\n        ...prevError,\n        [`${name}Bool`]: false,\n        [name]: ''\n      }));\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    await createAccount();\n  };\n  const verifyEmail = async e => {\n    e.target.disabled = true;\n    e.target.style.display = 'none';\n    setVerifyEmailClicked(true);\n    inputMail.current.disabled = true;\n    if (person.find(p => p.email === formData.email)) {\n      setIsExisting(true);\n    } else {\n      setIsExisting(false);\n    }\n  };\n  useEffect(() => {\n    getAllPersons();\n    fetchCompanies();\n    getPersonByEmail();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: !token ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-account\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: inputMail,\n            type: \"email\",\n            name: \"email\",\n            value: formData.email,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: verifyEmail,\n            children: \"Login/Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this), verifyEmailClicked && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: !isExisting ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"name\",\n                children: \"Name: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"name\",\n                value: formData.name,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error-account\",\n                children: formDataError.nameBool ? formDataError.name : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"password\",\n                children: \"Password: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                name: \"password\",\n                value: formData.password,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error-account\",\n                children: formDataError.passwordBool ? formDataError.password : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"company_id\",\n                children: \"Company: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"company_id\",\n                id: \"company_id\",\n                value: formData.company_id,\n                onChange: handleInputChange,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"0\",\n                  children: \"Select Company\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 45\n                }, this), companies && companies.map(c => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: c.id,\n                  children: c.name\n                }, c.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 49\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error-account\",\n                children: formDataError.company_idBool ? formDataError.company_id : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"role\",\n                children: \"Role: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"role\",\n                id: \"role\",\n                value: formData.role,\n                onChange: handleInputChange,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"0\",\n                  children: \"Select Role\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"admin\",\n                  children: \"Admin\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"manager\",\n                  children: \"Manager\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"employee\",\n                  children: \"Employee\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error-account\",\n                children: formDataError.roleBool ? formDataError.role : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn\",\n                type: \"submit\",\n                children: \"Create\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"password\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                name: \"password\",\n                value: formData.password,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error-account\",\n                children: error.message === 'Request failed with status code 401' ? 'Wrong password' : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn\",\n                type: \"submit\",\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"account-container\",\n          children: onePerson && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"card-title\",\n              children: \"Data for User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Name: \", onePerson.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Email: \", onePerson.email]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Role: \", onePerson.role]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 9\n  }, this);\n}\n_s(Account, \"riqYBydP7w0/hDbAct9CoIBAgfk=\", false, function () {\n  return [useNavigate, useRole, useAuth];\n});\n_c = Account;\nexport default Account;\nvar _c;\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","PeopleService","CompaniesService","jwtDecode","useRole","useAuth","alert","jsxDEV","_jsxDEV","Account","_s","navigation","isExisting","setIsExisting","person","setPerson","onePerson","setOnePerson","companies","setCompanies","verifyEmailClicked","setVerifyEmailClicked","error","setError","token","localStorage","getItem","setRole","inputMail","loginC","logoutC","formData","setFormData","id","name","email","password","company_id","role","formDataError","setFormDataError","nameBool","emailBool","passwordBool","company_idBool","roleBool","getAllPersons","response","getPeople","data","err","getPersonByEmail","decodedToken","sub","fetchCompanies","getCompanies","login","setItem","createAccount","company","createPerson","handleInputChange","event","value","target","prevState","trim","prevError","handleSubmit","e","preventDefault","verifyEmail","disabled","style","display","current","find","p","children","className","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","ref","type","onChange","onClick","map","c","message","_c","$RefreshReg$"],"sources":["/home/marwan/Projet Groupe Web Piscine/T-WEB-501-LYO_19/project-jobboard/src/Pages/Account.js"],"sourcesContent":["\nimport { React, useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport PeopleService from '../Services/PeopleService';\nimport CompaniesService from '../Services/CompaniesService';\nimport jwtDecode from 'jwt-decode';\nimport { useRole } from '../Components/RoleContext';\nimport { useAuth } from '../Components/AuthContext';\nimport alert from 'sweetalert2';\n\nimport '../Styles/Form.css';\nimport '../Styles/Account.css';\n\n\nfunction Account () {\n    const navigation = useNavigate();\n    const [isExisting, setIsExisting] = useState(false);\n    const [person, setPerson] = useState([]);\n    const [onePerson, setOnePerson] = useState([]);\n    const [companies, setCompanies] = useState([]);\n    const [verifyEmailClicked, setVerifyEmailClicked] = useState(false);\n    const [error, setError] = useState(null);\n    const token = localStorage.getItem(\"userToken\");\n    const { setRole } = useRole();\n    const inputMail = useRef();\n    \n    const {loginC, logoutC} = useAuth();\n\n    const [formData, setFormData] = useState({\n        id: 0,\n        name: '',\n        email: '',\n        password: '',\n        company_id: 0,\n        role: ''\n    })\n\n    const [formDataError, setFormDataError] = useState({\n        nameBool: true,\n        name: '',\n        emailBool: true,\n        email: '',\n        passwordBool: true,\n        password: '',\n        company_idBool: true,\n        company_id: '',\n        roleBool: true,\n        role: ''\n    })\n\n    const getAllPersons = async () => {\n        try {\n            const response = await PeopleService.getPeople();\n            setPerson(response.data);\n        } catch (err) {\n            setError(err);\n        }\n    }\n\n    const getPersonByEmail = async () => {\n        try {\n            const decodedToken = jwtDecode(token);\n            const email = decodedToken.sub;\n            const response = await PeopleService.getPersonByEmail(email);\n            setOnePerson(response.data);\n            setRole(response.data.role);\n        } catch (err) {\n            setError(err);\n        }\n    }\n\n    const fetchCompanies = async () => {\n        try {\n            const response = await CompaniesService.getCompanies();\n            setCompanies(response.data);\n        } catch (err) {\n            setError(err);\n        }\n    }\n\n    const login = async () => {\n        try {\n            const response = await PeopleService.login(formData.email, formData.password);\n            const token = response.data.token;\n            localStorage.setItem('userToken', token);\n            navigation('/');\n            loginC();\n            \n        } catch (error) {\n            setError(error);\n        }\n    }\n\n\n\n    const createAccount = async () => {\n        try {\n            if (!isExisting) {\n                if (!formDataError.nameBool || !formDataError.emailBool || !formDataError.passwordBool || !formDataError.roleBool || !formDataError.company_idBool) {\n                    const data = {\n                        id: 0,\n                        name: formData.name,\n                        email: formData.email,\n                        password: formData.password,\n                        role: formData.role,\n                        company: {\n                            id: formData.company_id\n                        }\n                    }\n                    const response = await PeopleService.createPerson(data);\n                    setPerson([...person, response.data]);\n                    setIsExisting(true);\n                    login();\n                    setFormData({\n                        id: 0,\n                        name: '',\n                        email: '',\n                        password: '',\n                        company_id: 0\n                    })\n                }\n            }\n            else {\n                login();\n            }\n        } catch (err) {\n            setError(err);\n        }\n    }\n\n    const handleInputChange = (event) => {\n        const { name, value } = event.target;\n        setFormData(prevState => ({ ...prevState, [name]: value }));\n        if (value.trim() === \"\" || value === \"0\") {\n            setFormDataError(prevError => ({\n                ...prevError,\n                [`${name}Bool`]: true,\n                [name]: `${name} cannot be empty`\n            }));\n        } else {\n            setFormDataError(prevError => ({\n                ...prevError,\n                [`${name}Bool`]: false,\n                [name]: ''\n            }));\n        }\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        await createAccount();\n    }\n\n    const verifyEmail = async (e) => {\n        e.target.disabled = true;\n        e.target.style.display = 'none';\n        setVerifyEmailClicked(true);\n        inputMail.current.disabled = true;\n        if (person.find((p) => p.email === formData.email)) {\n            setIsExisting(true);\n        }\n        else {\n            setIsExisting(false);\n        }\n    }\n\n    useEffect(() => {\n        getAllPersons();\n        fetchCompanies();\n        getPersonByEmail();\n    }, [])\n\n    return (\n\n        <div>\n            <div>\n                {!token ? (\n                    <div className='form-account'>\n                    <form className='form' onSubmit={handleSubmit}>\n                        <label htmlFor='email'>Email</label>\n                        <input ref={inputMail} type='email' name='email' value={formData.email} onChange={handleInputChange} />\n                        <button className='btn' onClick={verifyEmail}>Login/Register</button>\n                        {verifyEmailClicked && (\n                            <div>\n                                {!isExisting ? (\n                                    <div>\n                                        <label htmlFor='name'>Name: </label>\n                                            <input type='text' name='name' value={formData.name} onChange={handleInputChange} />\n                                            <br/>\n                                            <span className='error-account'>{formDataError.nameBool ? formDataError.name : ''}</span>\n                                            <br/>\n                                        <label htmlFor='password'>Password: </label>\n                                            <input type='password' name='password' value={formData.password} onChange={handleInputChange} />\n                                            <br/>\n                                            <span className='error-account'>{formDataError.passwordBool ? formDataError.password : ''}</span>\n                                            <br/>\n                                        <label htmlFor='company_id'>Company: </label>\n                                        <select\n                                            name='company_id'\n                                            id='company_id'\n                                            value={formData.company_id}\n                                            onChange={handleInputChange}>\n                                            <option value=\"0\">Select Company</option>\n                                            {companies && companies.map((c) => (\n                                                <option key={c.id} value={c.id}>{c.name}</option>\n                                            ))}\n                                            </select>\n                                            <br/>\n                                            <span className='error-account'>{formDataError.company_idBool ? formDataError.company_id : ''}</span>\n                                            <br/>\n                                        <label htmlFor='role'>Role: </label>\n                                        <select name='role' id='role'\n                                            value={formData.role} onChange={handleInputChange}>\n                                                <option value=\"0\">Select Role</option>\n                                                <option value=\"admin\">Admin</option>\n                                                <option value=\"manager\">Manager</option>\n                                                <option value=\"employee\">Employee</option>\n                                            </select>\n                                            <br/>\n                                            <span className='error-account'>{formDataError.roleBool ? formDataError.role : ''}</span>\n                                            <br/>\n                                        <button className='btn' type='submit'>Create</button>\n                                    </div>\n                                ) : <div>\n                                    <label htmlFor='password'>Password</label>\n                                            <input type='password' name='password' value={formData.password} onChange={handleInputChange} />\n                                            <br/>\n                                            <span className='error-account'>{error.message === 'Request failed with status code 401' ? 'Wrong password' : ''}</span>\n                                    <button className='btn' type='submit'>Login</button>\n                                </div>}\n                            </div>\n                        )}\n                        </form>\n                    </div>\n                ) : (\n                        <div>\n                            <div className='account-container'>\n                                {onePerson && (\n                                <div className='card'>\n                                    <h2 className='card-title'>Data for User</h2>\n                                    <div className='card-content'>\n                                        <p>Name: {onePerson.name}</p>\n                                        <p>Email: {onePerson.email}</p>\n                                        <p>Role: {onePerson.role}</p>\n                                    </div>\n                                    </div>\n                                )}\n                            </div>\n                    </div>\n                )}\n\n            </div>\n        </div>\n        \n    );\n}\n\nexport default Account;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}